# Fast Agent Docker Environment Configuration

# ====================================================================
# GOOGLE API CONFIGURATION (Required for fast-agent)
# ====================================================================
# Your Google Gemini API key (get from: https://aistudio.google.com/app/apikey)
GOOGLE_API_KEY=

# ====================================================================
# GENERIC BASE URL (Required for fast-agent)
# ====================================================================
# Your generic base URL (e.g., http://localhost:8080/gigachat-adapter/v1)
GENERIC_BASE_URL=

# ====================================================================
# BITBUCKET SERVER CONFIGURATION (Required for pull requests)
# ====================================================================
# Your Bitbucket Server URL (e.g., https://bitbucket.your-company.com)
BITBUCKET_URL=

# Bitbucket Personal Access Token (create in your Bitbucket Server user settings)
BITBUCKET_TOKEN=

# The Bitbucket workspace/project to work with
BITBUCKET_WORKSPACE=

# ====================================================================
# BITBUCKET CONTAINER CONFIGURATION (For running Bitbucket locally)
# ====================================================================
# One-time setup token for initial Bitbucket configuration
BITBUCKET_SETUP_TOKEN=

# Display name for the Bitbucket server instance
BITBUCKET_SETUP_DISPLAYNAME=Bitbucket

# Admin email for Bitbucket setup
BITBUCKET_SETUP_EMAIL=admin@example.com

# ====================================================================
# JIRA CONFIGURATION (Required for ticket reading)
# ====================================================================
# Your JIRA instance URL (e.g., https://your-domain.atlassian.net for Cloud)
JIRA_URL=

# Your JIRA username/email
JIRA_USERNAME=

# JIRA API Token (create at: https://id.atlassian.com/manage-profile/security/api-tokens)
JIRA_TOKEN=

# ====================================================================
# CONFLUENCE CONFIGURATION (Optional - part of Atlassian suite)
# ====================================================================
# Your Confluence instance URL (usually same as JIRA if same instance)
CONFLUENCE_URL=

# Your Confluence username/email (usually same as JIRA)
CONFLUENCE_USERNAME=

# Confluence API Token (usually same as JIRA if same instance)
CONFLUENCE_TOKEN=

# ====================================================================
# SSH KEY CONFIGURATION (Optional - for git SSH operations)
# ====================================================================
# Git user name (for commits when using SSH keys)
GIT_USER_NAME=Docker User

# Git user email (for commits when using SSH keys)
GIT_USER_EMAIL=docker@example.com

# SSH Key Path (optional - leave empty if using default ~/.ssh directory)
# SSH_KEY_PATH=

# ====================================================================
# EXAMPLE CONFIGURATIONS
# ====================================================================

# Cloud Examples:
# JIRA_URL=https://mycompany.atlassian.net
# BITBUCKET_WORKSPACE=mycompany

# Server Examples:
# JIRA_URL=https://jira.mycompany.com
# Bitbucket Server would use different configuration (contact admin)

# ====================================================================
# GPT 2 GIGA Fast Agent Configuration
# ====================================================================
# Credentials for GigaChat API (get from: https://gigachat.devices.sberbank.ru/api/v1/credentials)
GIGACHAT_CREDENTIALS=
# Base URL for GigaChat API (get from: https://gigachat.devices.sberbank.ru/api/v1/credentials)
GIGACHAT_BASE_URL=https://gigachat.devices.sberbank.ru/api/v1
# Client ID for GigaChat API (get from: https://gigachat.devices.sberbank.ru/api/v1/credentials)
GIGACHAT_SCOPE=GIGACHAT_API_CORP
# Model for GigaChat API (get from: https://gigachat.devices.sberbank.ru/api/v1/models)
GIGACHAT_MODEL=GigaChat
# Verify SSL certificates when connecting to GigaChat API (optional)
GIGACHAT_VERIFY_SSL_CERTS=


# ====================================================================
# INSTRUCTIONS
# ====================================================================
# 1. Copy this file to .env: cp .env.example .env
# 2. Fill in your actual credentials
#
# SSH Setup (Optional):
# If you want to use SSH keys for git operations:
# - Place your SSH keys in ~/.ssh/ (id_rsa, id_rsa.pub, id_ed25519, etc.)
# - Or set SSH_KEY_PATH to specify a custom SSH key directory
# - Fill in GIT_USER_NAME and GIT_USER_EMAIL for commits
#
# 3. Run: docker-compose up
# 4. The container will have access to MCP tools for Bitbucket, JIRA, and git
